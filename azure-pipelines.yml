variables:
  
  DotNetVersion: '9.0.300'
  PathToProjectFolder: 'src\AutoCompleteEntry'
  PathToProjectFile: '$(PathToProjectFolder)\AutoCompleteEntry.csproj'
  BuildConfiguration: Release

# Disable generic automatic trigger for now. To publish a new nuget manage, a manual build must be triggered
trigger: none

# Use the pipeline to validate the build for any PR made to main branch
pr: [main]

jobs:
  - job: build_library
    displayName: Build Library
    pool:
      vmImage: windows-latest
    steps:

      - task: UseDotNet@2
        displayName: Install .NET $(DotNetVersion)
        inputs:
          packageType: 'sdk'
          version: '$(DotNetVersion)'

      - task: CmdLine@2
        displayName: 'Install .NET MAUI Workload $(DotNetVersion)'
        inputs:
          script: dotnet workload restore $(PathToProjectFile)

      - task: NuGetToolInstaller@1
        displayName: 'Install Latest Nuget Package Manager'
        inputs:
          versionSpec: 
          checkLatest: true

      - task: CmdLine@2
        displayName: 'Build $(PathToProjectFile)'
        inputs:
          script: 'dotnet build -c $(BuildConfiguration) $(PathToProjectFile)'

      - task: CopyFiles@2
        displayName: 'Copy nuget packages to staging directoy'
        inputs:
          Contents: '$(PathToProjectFolder)/bin/$(BuildConfiguration)/*.*nupkg'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/nugets'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish build output'
        inputs:
          PathtoPublish: $(Build.ArtifactStagingDirectory)/nugets
          ArtifactName: 'drop'
          publishLocation: 'Container'

  - job: 'publish_nuget_package'
    displayName: 'Publish NuGet Package'
    pool:
      vmImage: windows-latest
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    dependsOn: build_library
    steps:

      - task: DownloadBuildArtifacts@0
        displayName: 'Download the published artifact'
        inputs:
          buildType: 'current'
          downloadType: 'specific'
          downloadPath:  '$(Build.ArtifactStagingDirectory)/nugets'

      - task: NuGetCommand@2
        displayName: 'Push the artifact to NuGet feed'
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/nugets/**/*.nupkg'
          nuGetFeedType: 'external'
          publishFeedCredentials: 'NuGet'